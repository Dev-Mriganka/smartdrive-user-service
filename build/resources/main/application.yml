server:
  port: 8086

spring:
  application:
    name: user-service
  
  # Database Configuration
  datasource:
    url: jdbc:postgresql://${POSTGRES_HOST:localhost}:${POSTGRES_PORT:5432}/${POSTGRES_DB:smartdrive_users}
    username: ${POSTGRES_USER:postgres}
    password: ${POSTGRES_PASSWORD:password}
    driver-class-name: org.postgresql.Driver
  
  # JPA Configuration
  jpa:
    hibernate:
      ddl-auto: create-drop
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
  
  # Redis Configuration
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      database: ${REDIS_DATABASE:1}
  
  # Email Configuration
  mail:
    host: smtp.gmail.com
    port: 587
    username: ${SMTP_USERNAME:noreply@smartdrive.com}
    password: ${SMTP_PASSWORD:password}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
  
  # Security Configuration
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${JWT_ISSUER_URI:http://localhost:8085/oauth2/.well-known/oauth-authorization-server}

# User Service Configuration
app:
  user:
    verification:
      token-expiry-hours: 24
      base-url: http://localhost:3000
    password:
      min-length: 8
      require-special-chars: true
      require-numbers: true
      require-uppercase: true
    rate-limiting:
      registration-per-hour: 5
      verification-per-hour: 10
    caching:
      profile-ttl: 3600 # 1 hour
      verification-token-ttl: 86400 # 24 hours
      rate-limit-ttl: 3600 # 1 hour

# Management Endpoints
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: always

# Logging Configuration
logging:
  level:
    com.smartdrive.userservice: DEBUG
    org.springframework.security: DEBUG
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
